name: Publish Package

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:  # Manually start a workflow

jobs:
  release-windows:
    runs-on: windows-2016
    env:
      OH_PLATFORM: Windows-x86
      CMAKE_GENERATOR: "Visual Studio 15 2017"
      MSVER: "14.16.27023"
      WKITVER: "10.0.17134.0"
      TOOLSVER: BuildTools
      CXX: ""
      CC: ""

    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@master
        with:
          python-version: "3.8"
      # - name: Setup MSBuild.exe
      #   uses: microsoft/setup-msbuild@v1.0.3
      - name: Setup MSVC++
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x86
          sdk: ${{ env.WKITVER }}
          toolset: ${{ env.MSVER }}
      - name: Generating conan user directory
        run: |
          python --version
          python -m pip install conan==1.33.0 conan_package_tools -U
          conan profile new default --detect
          conan profile update settings.arch=x86 default
          conan profile update settings.compiler.runtime=MT default
          conan user

      - name: Building 
        run: |
          pip install boto3
          conan install . --build=missing
          git clone https://github.com/merakiacoustic/ohdevtools ../ohdevtools
          ./go fetch ohNet
          mkdir -p dependencies/AnyPlatform
          git clone https://github.com/merakiacoustic/ohWafHelpers.git -b enable-upstream-libressl dependencies/AnyPlatform/ohWafHelpers
          ./waf configure -v
          ./waf build -v
          ./waf bundle
          mv build/ohMediaPlayer.tar.gz build/ohMediaPlayer-$OH_PLATFORM.tar.gz
      - uses: actions/upload-artifact@v2
        name: Upload artifact
        with:
          name: windows
          path: build/ohMediaPlayer-*.tar.gz


  release-linux:
    if: false # works! Will be turned on later
    env:
      CONAN_GCC_VERSIONS: 9
      CONAN_ARCHS: x86_64
      OH_PLATFORM: Linux-x64
      COMPILER_NAME: gcc
    container:
      image: conanio/gcc9
      options: --user 0:0
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
      - name: Setup conan
        run: |
          conan profile new default --detect || true
          conan profile update settings.compiler.libcxx=libstdc++11 default
          conan user
      - name: Building 
        shell: bash
        run: |
          pip install boto3
          conan install . --build=missing
          git clone https://github.com/merakiacoustic/ohdevtools ../ohdevtools
          ./go fetch ohNet
          mkdir -p dependencies/AnyPlatform
          git clone https://github.com/merakiacoustic/ohWafHelpers.git -b enable-upstream-libressl dependencies/AnyPlatform/ohWafHelpers
          ./waf configure -v
          ./waf build -v
          ./waf bundle
          mv build/ohMediaPlayer.tar.gz build/ohMediaPlayer-$OH_PLATFORM.tar.gz
          
      - uses: actions/upload-artifact@v2
        name: Upload artifact
        with:
          name: linux
          path: build/ohMediaPlayer-*.tar.gz


  release-osx:
    runs-on: macOS-latest
    if: false # works! Will be turned on later
    env:
      OH_PLATFORM: Mac-x64
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@master
        with:
          python-version: "3.8"
      - name: Setup environment
        run: |
          pip3 install virtualenv
          virtualenv -p python3 venv
          source venv/bin/activate
      - name: Setup conan
        run: |
          python -m pip install conan==1.39.0 conan_package_tools -U
          conan profile new default --detect
          conan profile update settings.compiler.libcxx=libc++ default
          conan user
      - name: Building
        run: |
          pip install boto3
          conan install . --build=missing
          git clone https://github.com/merakiacoustic/ohdevtools ../ohdevtools
          ./go fetch ohNet
          mkdir -p dependencies/AnyPlatform
          git clone https://github.com/merakiacoustic/ohWafHelpers.git -b enable-upstream-libressl dependencies/AnyPlatform/ohWafHelpers
          ./waf configure -v
          ./waf build -v
          ./waf bundle
          mv build/ohMediaPlayer.tar.gz build/ohMediaPlayer-$OH_PLATFORM.tar.gz
